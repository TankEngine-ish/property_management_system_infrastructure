global:
  environment: development

postgres:
  # Note: Actual credentials are now stored in HashiCorp Vault
  database:
    name: "propertydb"  # Just a placeholder/reference
  
  vault:
    enabled: true
    role: "postgres-role"
    secretPath: "property-app/database"  # CHANGED: Removed /data/
  
  persistence:
    enabled: true
    storageClass: "local-storage"
    accessMode: ReadWriteOnce
    size: 8Gi
  
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 150Mi
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

backend:
  enabled: true
  database:
    name: "propertydb"  # placeholder
    serviceAccount:
      create: true
      name: "property-app-backend"
      annotations: {}
  vault:
    enabled: true
    role: "postgres-role"
    secretPath: "property-app/database"
  podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-init-first: "true"
    vault.hashicorp.com/role: "postgres-role"
    vault.hashicorp.com/address: "http://vault.vault.svc.cluster.local:8200"
    vault.hashicorp.com/agent-inject-secret-database-config: "property-app/database"
    vault.hashicorp.com/agent-inject-template-database-config: |
      {{- with secret "property-app/database" -}}
      #!/bin/sh
      export DATABASE_URL="postgres://{{ .Data.data.user }}:{{ .Data.data.password }}@property-app-postgres.property-app.svc.cluster.local:5432/{{ .Data.data.database }}?sslmode=disable"
      {{- end -}}
    traffic.sidecar.istio.io/excludeOutboundIPRanges: "10.100.139.236/32"
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 150Mi
  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80


frontend:
  env:
    NEXT_PUBLIC_API_URL: "http://13.51.86.244/api"
  ingress:
    enabled: false
  
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 100Mi
  
  livenessProbe:
    enabled: true
    path: /api/health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  readinessProbe:
    enabled: true
    path: /api/health
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80