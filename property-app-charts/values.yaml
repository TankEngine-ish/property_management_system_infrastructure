
global:
  environment: development


postgres:
  enabled: true
  database:
    name: "propertydb"
    user: "pguser"
    password: "pgpassword"  # In production, I use a secret reference
  
  persistence:
    enabled: true
    storageClass: "local-storage"
    accessMode: ReadWriteOnce
    size: 8Gi
  
  resources:
    limits:
      cpu: 400m
      memory: 400Mi
    requests:
      cpu: 50m
      memory: 200Mi
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

backend:
  enabled: true
  
  database:
    name: "propertydb"
    user: "pguser"
    password: "pgpassword"  # I am using a secret reference
  
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 50m
      memory: 100Mi
  
  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  readinessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

frontend:
  env:
    NEXT_PUBLIC_API_URL: "http://13.51.86.244/api"
  ingress:
    enabled: false
  
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 100Mi
  
  livenessProbe:
    enabled: true
    path: /api/health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  readinessProbe:
    enabled: true
    path: /api/health
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80