---
- name: Load overlay and br_netfilter modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Add sysctl settings for Kubernetes
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { key: 'net.ipv4.ip_forward', value: '1' }
  notify: Reload sysctl

- name: Apply all system-wide sysctl settings
  command: sysctl --system

- name: Disable swap
  command: swapoff -a

- name: Disable swap in fstab to persist across reboots
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

- name: Add CRI-O repository
  shell: |
    export OS=xUbuntu_22.04
    export VERSION=1.27  # doesn't work with 1.30

    # remove old repository files because there might be a conflict with an older cached version of cri-o for some reason
    rm -f /etc/apt/sources.list.d/devel:kubic:*.list
    
    # add the new repository
    echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /tmp/devel:kubic:libcontainers:stable.list
    echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /tmp/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
    
    sudo mv /tmp/devel:kubic:libcontainers:stable.list /etc/apt/sources.list.d/
    sudo mv /tmp/devel:kubic:libcontainers:stable:cri-o:$VERSION.list /etc/apt/sources.list.d/
   
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key add -
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/Release.key | sudo apt-key add -
  args:
    executable: /bin/bash

- name: Update the APT cache
  apt:
    update_cache: yes

- name: Install CRIO and runc
  apt:
    name: "{{ item }}"
    state: latest
  loop:
    - cri-o
    - cri-o-runc

- name: Enable and start CRIO service
  systemd:
    name: crio
    enabled: yes
    state: started

- name: Download and install crictl
  get_url:
    url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: "/tmp/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
  vars:
    crictl_version: "v1.28.0"

- name: Extract crictl to /usr/local/bin
  unarchive:
    src: "/tmp/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
  vars:
    crictl_version: "v1.28.0"

- name: Add Kubernetes repository
  shell: |
    KUBERNETES_VERSION=1.29
    sudo mkdir -p /etc/apt/keyrings
    curl --connect-timeout 10 -m 30 -fsSL https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  args:
    warn: false
  register: repo_add
  timeout: 60
  async: 120
  poll: 5

- name: Debug repository addition
  debug:
    var: repo_add
  when: repo_add is defined

- name: Update the APT cache
  apt:
    update_cache: yes

- name: Install Kubernetes components
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - kubelet=1.29.0-1.1
      - kubectl=1.29.0-1.1
      - kubeadm=1.29.0-1.1

- name: Set node IP for kubelet
  copy:
    dest: /etc/default/kubelet
    content: |
      KUBELET_EXTRA_ARGS=--node-ip={{ ansible_default_ipv4.address }}

- name: Enable kubelet service
  systemd:
    name: kubelet
    enabled: yes
    daemon_reload: yes